# used to development and debug
quarkus.log.console.enable=true
quarkus.log.console.format=%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n
quarkus.log.console.level=DEBUG
quarkus.log.console.color=true
quarkus.http.port=8082

# all configuration to connect to kafka
mp.messaging.connector.smallrye-kafka.security.protocol=SASL_SSL
mp.messaging.connector.smallrye-kafka.ssl.protocol=TLSv1.2
mp.messaging.connector.smallrye-kafka.sasl.mechanism=SCRAM-SHA-512
mp.messaging.connector.smallrye-kafka.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required \
                username=${SCRAM_USERNAME} \
                password=${SCRAM_PASSWORD};
mp.messaging.connector.smallrye-kafka.ssl.truststore.location=${CERT_LOCATION}
mp.messaging.connector.smallrye-kafka.ssl.truststore.password=${CERT_PASSWORD}
mp.messaging.connector.smallrye-kafka.ssl.truststore.type=PKCS12

# Configure the Kafka sink (we write to it)
mp.messaging.connector.smallrye-kafka.bootstrap.servers=light-es-kafka-bootstrap-eventstreams.gse-eda-2020-10-3-0143c5dd31acd8e030a1d6e0ab1380e3-0000.us-east.containers.appdomain.cloud:443
mp.messaging.incoming.my-data-stream.connector=smallrye-kafka
mp.messaging.incoming.my-data-stream.topic=eda-quick
mp.messaging.incoming.my-data-stream.value.deserializer=org.apache.kafka.common.serialization.DoubleDeserializer

mp.messaging.outgoing.my-out-going.connector=smallrye-kafka
mp.messaging.outgoing.my-out-going.topic=eda-quick
mp.messaging.outgoing.my-out-going.value.serializer=org.apache.kafka.common.serialization.DoubleSerializer

